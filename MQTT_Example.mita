/*
 * MQTT_Example.mita
 *
 * Part 3: Wifi setup, connection to HiveMQ Broker and testing Publish messages.
 *
 * Eclipse Mita: XDK Workbench v.3.5.0
 *
 * Check out more about MQTT over MITA on:
 * https://www.eclipse.org/mita/platforms/xdk110/#mqtt
 *
 * Useful hotkeys:
 *     Ctrl + space
 */

package main;
import platforms.xdk110;

/* Global variables */
var counter_motion = 0;

/* Setup section */
setup The_Network:WLAN
{
	ssid = "Wifi_Name"; //XDK_Workshops
	authentication = Personal(psk = "Wifi_password"); //Bosch-Workshop-1
	ipConfiguration = Dhcp();
}

setup Broker:MQTT
{
	transport = The_Network;
	url = "mqtt://broker.mqttdashboard.com";

	/*
	 * Instructions to set the clienID:
	 * --- - Your initials
	 * ddmmyy - Your birthday
	 * Example: RGC_181191
	 */
	clientId = "---_ddmmyy";

	keepAliveInterval = 60;
	cleanSession = true;

	/*
	 * Instructions to set the Custum_Topic:
	 * ddmmyy - The workshop date
	 * Example: xdk_workshop_180219/web
	 */
	var Custum_Topic = topic("xdk_workshop_ddmmyy/web",0);
}

setup environment
{
	power_mode = Normal;
	temperature_oversampling = OVERSAMPLE_8X;
}

setup accelerometer
{
 	range = Range_16G;
 	bandwidth = BW_7_81Hz;
 	any_motion_threshold = 100;
}

setup light
{
	manual_mode = true;
	integration_time = MS_800;
	high_brightness = false;
}

/* Actions */
every button_two.pressed
{
	print(`Button 2 pressed!\n`);
	Broker.Custum_Topic.write(`Button 2 pressed!\n`);
}

every button_one.pressed
{
 	var temperature_value = environment.temperature.read();
 	print(`Temperature: ${temperature_value} milliCelsius\n`);
}

every accelerometer.any_motion
{
 	counter_motion += 1;
 	print(`Motion counter: ${counter_motion}\n`);

 	if(counter_motion >= 10000)
 	{
 		counter_motion = 0;
 		print(`Motion counter set to zero!\n`);
  }
}

every 5000 milliseconds
{
	var light_value = light.intensity.read();
	print(`Light intensity: ${light_value} milliLuxes\n`);
}
