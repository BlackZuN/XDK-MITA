/*
 * MQTT_Example.mita
 *
 * Part 4: Sensor data Publish messages on public broker HiveMQ.
 *
 * Eclipse Mita: XDK Workbench v.3.5.0
 *
 * Check out more about MQTT protocol on:
 * https://www.hivemq.com/mqtt-essentials/
 *
 * Useful hotkeys:
 *     Ctrl + space
 */

package main;
import platforms.xdk110;

/* Global variables */
var counterMotion = 0;

/* Setup section */
setup theNetwork:WLAN
{
	ssid = "Wifi-Name"; //XDK_Workshops
	authentication = Personal(psk = "Wifi-Password"); //Bosch-Workshop-1
	ipConfiguration = Dhcp();
}

setup broker:MQTT
{
	transport = theNetwork;
	url = "mqtt://broker.mqttdashboard.com";

	/*
	 * Instructions to set the clienID:
	 * --- - Your initials
	 * ddmmyy - Your birthday
	 * Example: RGC_181191
	 */
	clientId = "---_ddmmyy";

	keepAliveInterval = 60;
	cleanSession = true;

	/*
	 * Instructions to set the Custum_Topic:
	 * ddmmyy - The workshop date
	 * Example: xdk_workshop_180219/web
	 */
	var custumTopic = topic("xdk_workshop_ddmmyy/web",0);

	/*
	 * Instructions to set the sensor topics:
	 * --- - Your initials
	 * ddmmyy - Your birthday
	 * Example: xdk_workshop/RGC_180219/light
	 */
	var topicLight = topic("xdk_workshop/---_ddmmyy/light",0);
	var topicTemperature = topic("xdk_workshop/---_ddmmyy/temp",0);
	var topicMotion = topic("xdk_workshop/---_ddmmyy/motion",0);
}

setup environment
{
	power_mode = Normal;
	temperature_oversampling = OVERSAMPLE_8X;
}

setup accelerometer
{
 	range = Range_16G;
 	bandwidth = BW_7_81Hz;
 	any_motion_threshold = 100;
}

setup light
{
	manual_mode = true;
	integration_time = MS_800;
	high_brightness = false;
}

/* Actions */
every button_two.pressed
{
	print(`Button 2 pressed!\n`);
	broker.custumTopic.write(`Button 2 pressed!\n`);
}

every button_one.pressed
{
 	var temperatureValue = environment.temperature.read();
 	print(`Temperature: ${temperatureValue} milliCelsius\n`);
 	broker.topicTemperature.write(`Temperature: ${temperatureValue} milliCelsius\n`);
}

every accelerometer.any_motion
{
 	counterMotion += 1;
 	print(`Motion counter: ${counterMotion}\n`);
	broker.topicMotion.write(`Motion counter: ${counterMotion}\n`);

 	if(counterMotion >= 10000)
 	{
 		counterMotion = 0;
 		print(`Motion counter set to zero!\n`);
  	}
}

every 5000 milliseconds
{
	var lightValue = light.intensity.read();
	print(`Light intensity: ${lightValue} milliLuxes\n`);
	broker.topicLight.write(`Light intensity: ${lightValue} milliLuxes\n`);
}
